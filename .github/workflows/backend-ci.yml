name: CI WVH-Backend

on:
  push:
    paths:
      - smart-clicker-backend/**
      - .github/workflows/backend-ci.yml
  pull_request:
    paths:
      - smart-clicker-backend/**
      - .github/workflows/backend-ci.yml
  workflow_dispatch:

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install backend npm dependencies
        run: cd smart-clicker-backend && npm install

      - name: Run ESLint
        run: cd smart-clicker-backend && npm run lint

  build:
    needs: lint
    name: Build backend
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install backend npm dependencies
        run: cd smart-clicker-backend && npm install

      - name: Create .env file
        run: |
          cd smart-clicker-backend
          touch .env
          echo "${{ secrets.BACKEND_ENV }}" > .env

      - name: Run build
        run: cd smart-clicker-backend && npm run build

  test:
    needs: build
    name: Run Jest unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install backend npm dependencies
        run: cd smart-clicker-backend && npm install

      - name: Run unit tests
        run: |
          cd smart-clicker-backend 
          npm run test:coverage
          echo coverage/lcov.info

  sonarqube:
    needs: test
    name: SonarQube
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}