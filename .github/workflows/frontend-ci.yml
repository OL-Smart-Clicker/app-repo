name: CI WVH-Frontend

on:
  push:
    paths:
      - smart-clicker-frontend/**
      - .github/workflows/frontend-ci.yml
  pull_request:
    paths:
      - smart-clicker-frontend/**
      - .github/workflows/frontend-ci.yml
  workflow_dispatch:

env:
  IMAGE_NAME: frontend

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install frontend npm dependencies
        run: cd smart-clicker-frontend && npm install

      - name: Run ESLint
        run: cd smart-clicker-frontend && npm run lint

  build:
    needs: lint
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install frontend npm dependencies
        run: cd smart-clicker-frontend && npm install

      - name: Create environment.ts file
        run: |
          cd smart-clicker-frontend/src
          mkdir environments
          cd environments
          touch environment.ts
          echo "${{ secrets.FRONTEND_ENV }}" > environment.ts

      - name: Run build
        run: cd smart-clicker-frontend && npm run build

      - name: Zip artifact for deployment
        run: zip angular-app.zip ./smart-clicker-frontend/dist/smart-clicker-frontend -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: angular-app
          path: angular-app.zip

  sonarqube:
    needs: build
    name: SonarQube
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-container-staging:
    needs: build
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.event.pull_request.base.ref == 'staging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT_STAGING }}
          username: ${{ secrets.ACR_USERNAME_STAGING }}
          password: ${{ secrets.ACR_PASSWORD_STAGING }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: angular-app

      - name : Debug
        run: ls -a

      - name: Unzip artifact for deployment
        run: unzip angular-app.zip

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./smart-clicker-frontend
          build-args: |
            version=${{ github.sha }}
          tags: ${{ secrets.ACR_ENDPOINT_STAGING }}/${{ env.IMAGE_NAME }}:${{ github.sha}}
          platforms: linux/arm64
  
  deploy-container-main:
    needs: build
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT_PRODUCTION }}
          username: ${{ secrets.ACR_USERNAME_PRODUCTION }}
          password: ${{ secrets.ACR_PASSWORD_PRODUCTION }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: angular-app

      - name: Unzip artifact for deployment
        run: unzip angular-app.zip
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./smart-clicker-frontend
          build-args: |
            version=${{ github.sha }}
          tags: ${{ secrets.ACR_ENDPOINT_PRODUCTION }}/${{ env.IMAGE_NAME }}:${{ github.sha}}
          platforms: linux/arm64